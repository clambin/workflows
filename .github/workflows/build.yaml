name: Build

on:
   workflow_call:
    inputs:
      go-version:
        required: true
        type: string
      target:
        required: true
        type: string
      dockerfile:
        required: false
        default: ./build/Dockerfile
        type: string
      repo:
        required: false
        default: clambin
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: clambin/workflows/.github/actions/go/test@actions
        with:
          go-version: ${{ inputs.go-version }}
          codecov-token: ${{ secrets.CODECOV_TOKEN }}  
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux ]
        goarch: [ amd64, arm, arm64 ]
    steps:
      - uses: clambin/workflows/.github/actions/go/build@actions
        with:
          go-version: ${{ inputs.go-version }}
          target: ${{ inputs.target }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.target }}-linux-arm
          path: ./bld
      - uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.target }}-linux-arm64
          path: ./bld
      - uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.target }}-linux-amd64
          path: ./bld
      - name: Fix permissions
        run: chmod +x bld/*
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v3.6.2
        id: docker_meta
        with:
          images: ghcr.io/${{ inputs.repo }}/${{ inputs.target }}
          tags: |
            type=sha,suffix=-{{date 'YYYYMMDDHHmmssSS'}}
            type=semver,pattern={{version}}
      - uses: docker/build-push-action@v2.9.0
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64,linux/arm,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ steps.docker_meta.outputs.version }}
