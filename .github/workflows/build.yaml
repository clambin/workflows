name: Build

on:
   workflow_call:
    inputs:
      go-version:
        description: "go version to use for test & build"
        type: string
        required: false
        default: "1.18"
      target:
        required: true
        type: string
      docker:
        description: "build a docker container for the target"
        required: false
        default: true
        type: boolean
      dockerfile:
        required: false
        default: "./build/Dockerfile"
        type: string
      repo:
        required: false
        default: "clambin"
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux ]
        goarch: [ amd64, arm, arm64 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.go-version }}
      - id: vars
        name: Version number
        run: echo ::set-output name=version::${GITHUB_REF##*/}
        shell: bash
      - name: build
        env:
          TARGET: ${{ inputs.target }}
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          CGO_ENABLED=0 go build \
              -ldflags "-X github.com/$GITHUB_REPOSITORY/version.BuildVersion=$VERSION" \
              -o bld/$TARGET-$GOOS-$GOARCH \
              cmd/$TARGET/$TARGET.go
        shell: bash
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.target }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./bld/*
  docker:
    if: ${{ inputs.docker }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.target }}-linux-arm
          path: ./bld
      - uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.target }}-linux-arm64
          path: ./bld
      - uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.target }}-linux-amd64
          path: ./bld
      - name: Fix permissions
        run: chmod +x bld/*
        shell: bash
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v3.7.0
        id: docker_meta
        with:
          images: ghcr.io/${{ inputs.repo }}/${{ inputs.target }}
          tags: |
            type=sha,suffix=-{{date 'YYYYMMDDHHmmssSS'}}
            type=semver,pattern={{version}}
      - uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64,linux/arm,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ steps.docker_meta.outputs.version }}
