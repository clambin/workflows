name: build
description: "run go build"
inputs:
  target:
    description: "target to build. needs to be in cmd/<target>/<target>.go"
    required: true
    type: string
  dockerfile:
    description: "dockerfile to build docker image"
    required: no
    default: "build/Dockerfile"
    type: string
  repo:
    description: "repo to push docker image to"
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.target }}-linux-arm
        path: ./bld
    - uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.target }}-linux-arm64
        path: ./bld
    - uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.target }}-linux-amd64
        path: ./bld
    - name: Fix permissions
      run: chmod +x bld/*
    - uses: docker/setup-qemu-action@v1
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1.12.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/metadata-action@v3.6.2
      id: docker_meta
      with:
        images: ghcr.io/${{ inputs.repo }}/${{ inputs.target }}
        tags: |
          type=sha,suffix=-{{date 'YYYYMMDDHHmmssSS'}}
          type=semver,pattern={{version}}
    - uses: docker/build-push-action@v2.9.0
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        platforms: linux/amd64,linux/arm,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        build-args: |
          BUILD_VERSION=${{ steps.docker_meta.outputs.version }}

